---
image: registry.redhat.io/openshift-builds/openshift-builds-operator-bundle:v1.0.2
name: openshift-builds-operator.v1.0.2
package: openshift-builds-operator
properties:
- type: olm.gvk
  value:
    group: operator.shipwright.io
    kind: ShipwrightBuild
    version: v1alpha1
- type: olm.gvk.required
  value:
    group: operator.tekton.dev
    kind: TektonConfig
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-builds-operator
    version: 1.0.2
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoidjEiLCJkYXRhIjp7ImNvbnRyb2xsZXJfbWFuYWdlcl9jb25maWcueWFtbCI6ImFwaVZlcnNpb246IGNvbnRyb2xsZXItcnVudGltZS5zaWdzLms4cy5pby92MWFscGhhMVxua2luZDogQ29udHJvbGxlck1hbmFnZXJDb25maWdcbmhlYWx0aDpcbiAgaGVhbHRoUHJvYmVCaW5kQWRkcmVzczogOjgwODFcbm1ldHJpY3M6XG4gIGJpbmRBZGRyZXNzOiAxMjcuMC4wLjE6ODA4MFxud2ViaG9vazpcbiAgcG9ydDogOTQ0M1xubGVhZGVyRWxlY3Rpb246XG4gIGxlYWRlckVsZWN0OiB0cnVlXG4gIHJlc291cmNlTmFtZTogMDFhOWIyZDEuc2hpcHdyaWdodC5pb1xuIn0sImtpbmQiOiJDb25maWdNYXAiLCJtZXRhZGF0YSI6eyJuYW1lIjoib3BlbnNoaWZ0LWJ1aWxkcy1vcGVyYXRvci1tYW5hZ2VyLWNvbmZpZyJ9fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7Im5hbWUiOiJvcGVuc2hpZnQtYnVpbGRzLW9wZXJhdG9yLW1ldHJpY3MtcmVhZGVyIn0sInJ1bGVzIjpbeyJub25SZXNvdXJjZVVSTHMiOlsiL21ldHJpY3MiXSwidmVyYnMiOlsiZ2V0Il19XX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwIjoib3BlbnNoaWZ0LWJ1aWxkcy1vcGVyYXRvciJ9LCJuYW1lIjoib3BlbnNoaWZ0LWJ1aWxkcy1vcGVyYXRvci1tZXRyaWNzLXNlcnZpY2UifSwic3BlYyI6eyJwb3J0cyI6W3sibmFtZSI6Imh0dHBzIiwicG9ydCI6ODQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0IjoiaHR0cHMifV0sInNlbGVjdG9yIjp7ImFwcCI6Im9wZW5zaGlmdC1idWlsZHMtb3BlcmF0b3IiLCJjb250cm9sLXBsYW5lIjoiY29udHJvbGxlci1tYW5hZ2VyIn19LCJzdGF0dXMiOnsibG9hZEJhbGFuY2VyIjp7fX19
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjguMCJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6InNoaXB3cmlnaHRidWlsZHMub3BlcmF0b3Iuc2hpcHdyaWdodC5pbyJ9LCJzcGVjIjp7Imdyb3VwIjoib3BlcmF0b3Iuc2hpcHdyaWdodC5pbyIsIm5hbWVzIjp7ImtpbmQiOiJTaGlwd3JpZ2h0QnVpbGQiLCJsaXN0S2luZCI6IlNoaXB3cmlnaHRCdWlsZExpc3QiLCJwbHVyYWwiOiJzaGlwd3JpZ2h0YnVpbGRzIiwic2luZ3VsYXIiOiJzaGlwd3JpZ2h0YnVpbGQifSwic2NvcGUiOiJDbHVzdGVyIiwidmVyc2lvbnMiOlt7Im5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJTaGlwd3JpZ2h0QnVpbGQgcmVwcmVzZW50cyB0aGUgZGVwbG95bWVudCBvZiBTaGlwd3JpZ2h0J3MgYnVpbGQgY29udHJvbGxlciBvbiBhIEt1YmVybmV0ZXMgY2x1c3Rlci4iLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IlNoaXB3cmlnaHRCdWlsZFNwZWMgZGVmaW5lcyB0aGUgY29uZmlndXJhdGlvbiBvZiBhIFNoaXB3cmlnaHQgQnVpbGQgZGVwbG95bWVudC4iLCJwcm9wZXJ0aWVzIjp7InRhcmdldE5hbWVzcGFjZSI6eyJkZXNjcmlwdGlvbiI6IlRhcmdldE5hbWVzcGFjZSBpcyB0aGUgdGFyZ2V0IG5hbWVzcGFjZSB3aGVyZSBTaGlwd3JpZ2h0J3MgYnVpbGQgY29udHJvbGxlciB3aWxsIGJlIGRlcGxveWVkLiIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiU2hpcHdyaWdodEJ1aWxkU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIFNoaXB3cmlnaHRCdWlsZCIsInByb3BlcnRpZXMiOnsiY29uZGl0aW9ucyI6eyJkZXNjcmlwdGlvbiI6IkNvbmRpdGlvbnMgaG9sZHMgdGhlIGxhdGVzdCBhdmFpbGFibGUgb2JzZXJ2YXRpb25zIG9mIGEgcmVzb3VyY2UncyBjdXJyZW50IHN0YXRlLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQ29uZGl0aW9uIGNvbnRhaW5zIGRldGFpbHMgZm9yIG9uZSBhc3BlY3Qgb2YgdGhlIGN1cnJlbnQgc3RhdGUgb2YgdGhpcyBBUEkgUmVzb3VyY2UuIC0tLSBUaGlzIHN0cnVjdCBpcyBpbnRlbmRlZCBmb3IgZGlyZWN0IHVzZSBhcyBhbiBhcnJheSBhdCB0aGUgZmllbGQgcGF0aCAuc3RhdHVzLmNvbmRpdGlvbnMuICBGb3IgZXhhbXBsZSwgXG4gdHlwZSBGb29TdGF0dXMgc3RydWN0eyAvLyBSZXByZXNlbnRzIHRoZSBvYnNlcnZhdGlvbnMgb2YgYSBmb28ncyBjdXJyZW50IHN0YXRlLiAvLyBLbm93biAuc3RhdHVzLmNvbmRpdGlvbnMudHlwZSBhcmU6IFwiQXZhaWxhYmxlXCIsIFwiUHJvZ3Jlc3NpbmdcIiwgYW5kIFwiRGVncmFkZWRcIiAvLyArcGF0Y2hNZXJnZUtleT10eXBlIC8vICtwYXRjaFN0cmF0ZWd5PW1lcmdlIC8vICtsaXN0VHlwZT1tYXAgLy8gK2xpc3RNYXBLZXk9dHlwZSBDb25kaXRpb25zIFtdbWV0YXYxLkNvbmRpdGlvbiBganNvbjpcImNvbmRpdGlvbnMsb21pdGVtcHR5XCIgcGF0Y2hTdHJhdGVneTpcIm1lcmdlXCIgcGF0Y2hNZXJnZUtleTpcInR5cGVcIiBwcm90b2J1ZjpcImJ5dGVzLDEscmVwLG5hbWU9Y29uZGl0aW9uc1wiYCBcbiAvLyBvdGhlciBmaWVsZHMgfSIsInByb3BlcnRpZXMiOnsibGFzdFRyYW5zaXRpb25UaW1lIjp7ImRlc2NyaXB0aW9uIjoibGFzdFRyYW5zaXRpb25UaW1lIGlzIHRoZSBsYXN0IHRpbWUgdGhlIGNvbmRpdGlvbiB0cmFuc2l0aW9uZWQgZnJvbSBvbmUgc3RhdHVzIHRvIGFub3RoZXIuIFRoaXMgc2hvdWxkIGJlIHdoZW4gdGhlIHVuZGVybHlpbmcgY29uZGl0aW9uIGNoYW5nZWQuICBJZiB0aGF0IGlzIG5vdCBrbm93biwgdGhlbiB1c2luZyB0aGUgdGltZSB3aGVuIHRoZSBBUEkgZmllbGQgY2hhbmdlZCBpcyBhY2NlcHRhYmxlLiIsImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwibWVzc2FnZSI6eyJkZXNjcmlwdGlvbiI6Im1lc3NhZ2UgaXMgYSBodW1hbiByZWFkYWJsZSBtZXNzYWdlIGluZGljYXRpbmcgZGV0YWlscyBhYm91dCB0aGUgdHJhbnNpdGlvbi4gVGhpcyBtYXkgYmUgYW4gZW1wdHkgc3RyaW5nLiIsIm1heExlbmd0aCI6MzI3NjgsInR5cGUiOiJzdHJpbmcifSwib2JzZXJ2ZWRHZW5lcmF0aW9uIjp7ImRlc2NyaXB0aW9uIjoib2JzZXJ2ZWRHZW5lcmF0aW9uIHJlcHJlc2VudHMgdGhlIC5tZXRhZGF0YS5nZW5lcmF0aW9uIHRoYXQgdGhlIGNvbmRpdGlvbiB3YXMgc2V0IGJhc2VkIHVwb24uIEZvciBpbnN0YW5jZSwgaWYgLm1ldGFkYXRhLmdlbmVyYXRpb24gaXMgY3VycmVudGx5IDEyLCBidXQgdGhlIC5zdGF0dXMuY29uZGl0aW9uc1t4XS5vYnNlcnZlZEdlbmVyYXRpb24gaXMgOSwgdGhlIGNvbmRpdGlvbiBpcyBvdXQgb2YgZGF0ZSB3aXRoIHJlc3BlY3QgdG8gdGhlIGN1cnJlbnQgc3RhdGUgb2YgdGhlIGluc3RhbmNlLiIsImZvcm1hdCI6ImludDY0IiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwicmVhc29uIjp7ImRlc2NyaXB0aW9uIjoicmVhc29uIGNvbnRhaW5zIGEgcHJvZ3JhbW1hdGljIGlkZW50aWZpZXIgaW5kaWNhdGluZyB0aGUgcmVhc29uIGZvciB0aGUgY29uZGl0aW9uJ3MgbGFzdCB0cmFuc2l0aW9uLiBQcm9kdWNlcnMgb2Ygc3BlY2lmaWMgY29uZGl0aW9uIHR5cGVzIG1heSBkZWZpbmUgZXhwZWN0ZWQgdmFsdWVzIGFuZCBtZWFuaW5ncyBmb3IgdGhpcyBmaWVsZCwgYW5kIHdoZXRoZXIgdGhlIHZhbHVlcyBhcmUgY29uc2lkZXJlZCBhIGd1YXJhbnRlZWQgQVBJLiBUaGUgdmFsdWUgc2hvdWxkIGJlIGEgQ2FtZWxDYXNlIHN0cmluZy4gVGhpcyBmaWVsZCBtYXkgbm90IGJlIGVtcHR5LiIsIm1heExlbmd0aCI6MTAyNCwibWluTGVuZ3RoIjoxLCJwYXR0ZXJuIjoiXltBLVphLXpdKFtBLVphLXowLTlfLDpdKltBLVphLXowLTlfXSk/JCIsInR5cGUiOiJzdHJpbmcifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoic3RhdHVzIG9mIHRoZSBjb25kaXRpb24sIG9uZSBvZiBUcnVlLCBGYWxzZSwgVW5rbm93bi4iLCJlbnVtIjpbIlRydWUiLCJGYWxzZSIsIlVua25vd24iXSwidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoidHlwZSBvZiBjb25kaXRpb24gaW4gQ2FtZWxDYXNlIG9yIGluIGZvby5leGFtcGxlLmNvbS9DYW1lbENhc2UuIC0tLSBNYW55IC5jb25kaXRpb24udHlwZSB2YWx1ZXMgYXJlIGNvbnNpc3RlbnQgYWNyb3NzIHJlc291cmNlcyBsaWtlIEF2YWlsYWJsZSwgYnV0IGJlY2F1c2UgYXJiaXRyYXJ5IGNvbmRpdGlvbnMgY2FuIGJlIHVzZWZ1bCAoc2VlIC5ub2RlLnN0YXR1cy5jb25kaXRpb25zKSwgdGhlIGFiaWxpdHkgdG8gZGVjb25mbGljdCBpcyBpbXBvcnRhbnQuIFRoZSByZWdleCBpdCBtYXRjaGVzIGlzIChkbnMxMTIzU3ViZG9tYWluRm10Lyk/KHF1YWxpZmllZE5hbWVGbXQpIiwibWF4TGVuZ3RoIjozMTYsInBhdHRlcm4iOiJeKFthLXowLTldKFstYS16MC05XSpbYS16MC05XSk/KFxcLlthLXowLTldKFstYS16MC05XSpbYS16MC05XSk/KSovKT8oKFtBLVphLXowLTldWy1BLVphLXowLTlfLl0qKT9bQS1aYS16MC05XSkkIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibGFzdFRyYW5zaXRpb25UaW1lIiwibWVzc2FnZSIsInJlYXNvbiIsInN0YXR1cyIsInR5cGUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifX0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOltdLCJzdG9yZWRWZXJzaW9ucyI6W119fQ==
relatedImages:
- image: registry.redhat.io/openshift-builds/openshift-builds-controller-rhel8@sha256:0cf079a24b8b3a4b3e1f30710fea85039d9cf323cfedd06e7d1e33e6336fb848
  name: OPENSHIFT_BUILDS_CONTROLLER
- image: registry.redhat.io/openshift-builds/openshift-builds-git-cloner-rhel8@sha256:22930726a25b11de2571da0395b53352939d142a16f4db6fd5460abd4cc37ba5
  name: OPENSHIFT_BUILDS_GIT_CLONER
- image: registry.redhat.io/openshift-builds/openshift-builds-image-bundler-rhel8@sha256:f95348e5fc48676d93ebc919af2c27a041dfd632ec285296246d886daab11576
  name: OPENSHIFT_BUILDS_IMAGE_BUNDLER
- image: registry.redhat.io/openshift-builds/openshift-builds-image-processing-rhel8@sha256:fd903804672ec08acf9a2b49aa7ecc5f9b543c12f7462637ef756733171b3817
  name: OPENSHIFT_BUILDS_IMAGE_PROCESSING
- image: registry.redhat.io/openshift-builds/openshift-builds-operator-bundle:v1.0.2
  name: ""
- image: registry.redhat.io/openshift-builds/openshift-builds-rhel8-operator@sha256:7100a83aa053a976ceb77ace79f090ec8601bc9b2152ff6f7d00f0b1deea7f0b
  name: OPENSHIFT_BUILDS_OPERATOR
- image: registry.redhat.io/openshift-builds/openshift-builds-waiters-rhel8@sha256:d01c1749ce76dd4bf5fefaa6c553725d33533d6e70e884e916f12217b674c3cf
  name: OPENSHIFT_BUILDS_WAITERS
- image: registry.redhat.io/openshift-builds/openshift-builds-webhook-rhel8@sha256:73efcb6ad82f698d7463718b06c86f2b2b3b5326689a62dc39c9f5d68f8943f2
  name: OPENSHIFT_BUILDS_WEBHOOK
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:97cade2c1ee468261aec5400728c8d44de387b459134aec7a4c3b5ec5a335d2c
  name: ""
schema: olm.bundle
